<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script type="text/javascript" src="/blocksdk/blocksdk.js"></script>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
	  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-colorpicker/2.3.3/css/bootstrap-colorpicker.min.css" rel="stylesheet" media="all"> 
    
  </head>
  <body><div>
		<div id="workspace" class="container">
			<form>
        <div>What field does the data reside?</div>
        <div class="btn-group">          
          <button id="deDDButton" type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Select Field 
          </button>
          <div class="dropdown-menu" id="deDD">
            <a class="dropdown-item" href="#">json</a>
            <a class="dropdown-item" href="#">Reccomended Products</a>
            <a class="dropdown-item" href="#">Other Reccomendations</a>            
          </div>
        </div>
        <br>
        <br>
			  <div class="form-group">
          <div>
          <label for="itemsPerRow">Items Per Row</label><br>
				<input type="range" min="1" max="4" class="form-control-range" id="itemsPerRow" onInput="$('#itemsPerRowTxt').html($(this).val())">
				<span id="itemsPerRowTxt">1<!-- Default value --></span>
      </div>
				<div>
				<label for="imageWidth">Image Width</label><br>
				<input type="range" min="25" max="400" class="form-control-range" id="imageWidth" onInput="$('#imageWidthTxt').html($(this).val())">
				<span id="imageWidthTxt">50<!-- Default value --></span>
      </div>
      <div style="margin-bottom: 10px;">
      <div>Font Color:</div>
				<div id="nameColorContainer" style="background-color:#f5f5f5; padding:5px; " class="input-group">					
          <input type="text" id="nameColorInput" value="#269faf" class="form-control" />
					<span class="input-group-addon"><i style="width:35px; height:35px;"></i></span>
					<input type="hidden" id="nameColor">
				</div>        
      </div>  
      <div style="margin-bottom: 10px;">

        <div>Text Background Color: </div>
        <div id="bgColorContainer"  style="background-color:#f5f5f5; padding:5px;" class="input-group">					
          <input type="text" id="bgColorInput" value="#269faf" class="form-control" />
					<span class="input-group-addon"><i style="width:35px; height:35px; margin-left:10px;"></i></span>
					<input type="hidden" id="bgColor">
				</div>
        </div>
        <input class="form-check-input" type="checkbox" value="" id="showPrice">
        <label class="form-check-label" for="showPrice">
          Include Price
        </label><br><br>
        <input class="form-check-input" type="checkbox" value="" id="showInventory">
        <label class="form-check-label" for="showInventory">
          Include Inventory
        </label>
				  
				  

			  </div>
			</form>
		  </div>
	</div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-colorpicker/2.3.3/js/bootstrap-colorpicker.min.js"></script>
    <script type="text/javascript">
      var sdk = new window.sfdc.BlockSDK();
      var nameColor, imageWidth, itemsPerRow, showPrice, showInventory, deFieldName
      
      $(document).ready(function(){          
        $('.dropdown-toggle').dropdown()

        $(document).ready(function () {
            $('#deDD a').on('click', function () {              
              txt = ($(this).text());
              deFieldNamevar = txt;
              $("#deDDButton").text(txt)
            });
          });
      })
  
      


      //This puts a delay in so that the canvas does not draw constantly as the sliders change.
      function debounce (func, wait, immediate) {
        var timeout;
        return function() {
          var context = this, args = arguments;
          var later = function() {
            timeout = null;
            if (!immediate) func.apply(context, args);
          };
          var callNow = immediate && !timeout;
          clearTimeout(timeout);
          timeout = setTimeout(later, wait);
          if (callNow) func.apply(context, args);
        };
      }

      function paintSettings () {
        $("#imageWidth").val(imageWidth);
        $('#itemsPerRow').val(itemsPerRow);
        $('#nameColor').val(nameColor);	        
        $("#showPrice").prop("checked", showPrice);        
        $("#showInventory").prop("checked", showInventory);        
        
        $('#nameColorContainer').colorpicker('setValue', nameColor);
        $('#bgColorContainer').colorpicker('setValue', bgColor);

      }

      function paintSliderValues () {
        document.getElementById('itemsPerRowTxt').innerHTML = $("#itemsPerRow").val();
        document.getElementById('imageWidthTxt').innerHTML = $('#imageWidth').val();
        $('#nameColor').val($('#nameColor').val());   
        $('#bgColor').val($('#bgColor').val());        
        
      }

      function printCanvas() {
	
	//imageWidth = document.getElementById('imageWidth').value;
	
	imageWidth = $("#imageWidth").val();	
	itemsPerRow = $('#itemsPerRow').val();
	nameColor = $('#nameColor').val();
  bgColor = $('#bgColor').val();
	showPrice = $("#showPrice").prop("checked");
  showInventory = $("#showInventory").prop("checked");
  
	  var scTag = "</" 
		var templateContent = `
    %%[ 
			/* Get the order data from data extension */ 
			Set @OrderData = [json] 
		]%%
    <html>
		  <head>
			  <style>
			    @import url(https://fonts.googleapis.com/css?family=Lato:400,300,300italic,400italic,700,700italic);body,html{height:100%;width:100%;margin:0;padding:0;left:0;top:0;font-size:100%}.center,.container{margin-left:auto;margin-right:auto}*{font-family:Lato,Helvetica,sans-serif;color:#333447;line-height:1.5}h1{font-size:2.5rem}h2{font-size:2rem}h3{font-size:1.375rem}h4{font-size:1.125rem}h5{font-size:1rem}h6{font-size:.875rem}p{font-size:1.125rem;font-weight:200;line-height:1.8}.font-light{font-weight:300}.font-regular{font-weight:400}.font-heavy{font-weight:700}.left{text-align:left}.right{text-align:right}.center{text-align:center}.justify{text-align:justify}.container{width:90%}.row{position:relative;width:100%}.row [class^=col]{float:left;margin:.5rem 2%;min-height:.125rem}.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9{width:96%}.col-1-sm{width:4.33%}.col-2-sm{width:12.66%}.col-3-sm{width:21%}.col-4-sm{width:29.33%}.col-5-sm{width:37.66%}.col-6-sm{width:46%}.col-7-sm{width:54.33%}.col-8-sm{width:62.66%}.col-9-sm{width:71%}.col-10-sm{width:79.33%}.col-11-sm{width:87.66%}.col-12-sm{width:96%}.row::after{content:"";display:table;clear:both}.hidden-sm{display:none}@media only screen and (min-width:33.75em){.container{width:80%}}@media only screen and (min-width:45em){.col-1{width:4.33%}.col-2{width:12.66%}.col-3{width:21%}.col-4{width:29.33%}.col-5{width:37.66%}.col-6{width:46%}.col-7{width:54.33%}.col-8{width:62.66%}.col-9{width:71%}.col-10{width:79.33%}.col-11{width:87.66%}.col-12{width:96%}.hidden-sm{display:block}}@media only screen and (min-width:60em){.container{width:75%;max-width:60rem}}
			  </style>
		  </head>
		  <body>
        <div class="container">
          <div class="grid-display">
				    <div class="row">`                     
            templateContent += "<script runat='server'>Platform.Load('core','1.1')";
            templateContent += `
    
            var deData = Variable.GetValue("@OrderData");
   					var data = Platform.Function.ParseJSON(deData);    
			    	var html = "";
			      try{				          
              for(var i = 0; i < data.length; i++){                
                html += '<div class="col-' + 12 / ` + itemsPerRow + ` + '">';       
                html +=   '<div class="cardContainer" style=" background-color:` + bgColor + `;border:solid 1px #e6e1e1;  width: ' + (parseInt(` + imageWidth + `)) + 'px">';
                html +=     '<img style="width:` + imageWidth + `px" src="' + data[i].imageUrl + '" />'                
                html +=     '<div style="padding: 0px 5px; Font-weight: bold; color:` + nameColor + `">' + data[i].name + '</div>';`
                if(showPrice){
                  templateContent += `
                  html += '<hr><div style="Font-weight: bold;  padding: 0px 5px 5px 5px; color:` + nameColor + `">$' + data[i].price+ '</div>'`;
                };                
                
                if(showInventory){
                  templateContent += `
                  html += '<hr><div style="Font-weight: bold;  padding: 0px 5px 5px 5px; color:` + nameColor + `">In Stock: (' + data[i].inventoryCount+ ')</div>'`;
                };  

                templateContent += `
                html += '</div></div>';			
            }
           
            Write(html);
            }catch(err){
            Write("An error has occured: " + err)
            }
          `
    
    templateContent += scTag + "script>";                
    templateContent += 
            `</div>
          </div>
        </div>  
		  </body>
	  </html>`;	
        
		sdk.setContent(templateContent);
		
    var superContent = `
    <html>
		<head>
			<style>
			@import url(https://fonts.googleapis.com/css?family=Lato:400,300,300italic,400italic,700,700italic);body,html{height:100%;width:100%;margin:0;padding:0;left:0;top:0;font-size:100%}.center,.container{margin-left:auto;margin-right:auto}*{font-family:Lato,Helvetica,sans-serif;color:#333447;line-height:1.5}h1{font-size:2.5rem}h2{font-size:2rem}h3{font-size:1.375rem}h4{font-size:1.125rem}h5{font-size:1rem}h6{font-size:.875rem}p{font-size:1.125rem;font-weight:200;line-height:1.8}.font-light{font-weight:300}.font-regular{font-weight:400}.font-heavy{font-weight:700}.left{text-align:left}.right{text-align:right}.center{text-align:center}.justify{text-align:justify}.container{width:90%}.row{position:relative;width:100%}.row [class^=col]{float:left;margin:.5rem 2%;min-height:.125rem}.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9{width:96%}.col-1-sm{width:4.33%}.col-2-sm{width:12.66%}.col-3-sm{width:21%}.col-4-sm{width:29.33%}.col-5-sm{width:37.66%}.col-6-sm{width:46%}.col-7-sm{width:54.33%}.col-8-sm{width:62.66%}.col-9-sm{width:71%}.col-10-sm{width:79.33%}.col-11-sm{width:87.66%}.col-12-sm{width:96%}.row::after{content:"";display:table;clear:both}.hidden-sm{display:none}@media only screen and (min-width:33.75em){.container{width:80%}}@media only screen and (min-width:45em){.col-1{width:4.33%}.col-2{width:12.66%}.col-3{width:21%}.col-4{width:29.33%}.col-5{width:37.66%}.col-6{width:46%}.col-7{width:54.33%}.col-8{width:62.66%}.col-9{width:71%}.col-10{width:79.33%}.col-11{width:87.66%}.col-12{width:96%}.hidden-sm{display:block}}@media only screen and (min-width:60em){.container{width:75%;max-width:60rem}}
			</style>
		</head>
		<body>
			<div class="container" style="background-color:#f0f0f0;">
        <div class="grid-display">
					<div class="row">`;
		//add the initial row and loop throught the 4 test items					
		for(var i = 0; i < 4; i++){
			  superContent += '<div  class="col-' + 12 / itemsPerRow + '">';
        superContent += '<div class="cardContainer" style=" background-color:' + bgColor + ';border:solid 1px #e6e1e1;  width: ' + (parseInt(imageWidth)) + 'px">';
        superContent += '<img style="width:' + imageWidth + 'px" src="https://is-content-block.herokuapp.com/sampleimage.jpeg" />';
        superContent += '<div style=" padding: 0px 5px; Font-weight: bold; color:' + nameColor + '">Item Name</div>';
			
        if(showPrice){
          superContent += '<hr><div style="Font-weight: bold;  padding: 0px 5px 5px 5px; color:' + nameColor + '">Item Price</div>';
        }
        if(showInventory){
          superContent += '<hr><div style="Font-weight: bold;  padding: 0px 5px 5px 5px; color:' + nameColor + '">Inventory Count</div>';
        }

		    superContent += '</div></div>';			
		}
		superContent +=
					`</div>
				</div>
			</div>
		</body>
	</html>`;

		sdk.setSuperContent(superContent);

    sdk.setData({		
      imageWidth: imageWidth,
      itemsPerRow : itemsPerRow,
      nameColor : nameColor,
      bgColor : bgColor,
      showPrice : showPrice
	  });	    
}

sdk.getData(function (data) {
	imageWidth = data.imageWidth || 400;
	itemsPerRow = data.itemsPerRow || 2;
	nameColor = data.nameColor || '#000000';
  showPrice = data.showPrice;
  bgColor = data.bgColor;  

	paintSettings();
	paintSliderValues();
	printCanvas();
});

document.getElementById('workspace').addEventListener("input", function () {
	debounce(printCanvas, 500)();
	paintSliderValues();
});

$(function () {


	$('#nameColorContainer').colorpicker().on('changeColor', function() {
	  $("#nameColor").val($(this).colorpicker('getValue'));
      // do what you want
      debounce(printCanvas, 500)();
      paintSliderValues();
	  });

    $('#bgColorContainer').colorpicker().on('changeColor', function() {
	  $("#bgColor").val($(this).colorpicker('getValue'));
      // do what you want
      debounce(printCanvas, 500)();
      paintSliderValues();
	  });
  });

  



      $(function () {
	      $('#nameColorContainer').colorpicker().on('changeColor', function() {
	        $("#nameColor").val($(this).colorpicker('getValue'));
          
	      });
      });
    </script>
	
  </body>
</html>
